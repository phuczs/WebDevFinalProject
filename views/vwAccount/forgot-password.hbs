<div class="container">
        <div class="row justify-content-center mt-5">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-body">
                        <h2 class="card-title text-center mb-4">Forgot Password</h2>
                        {{#if message}}
                        <div class="alert alert-{{messageType}} alert-dismissible fade show" role="alert">
                            {{message}}
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                        {{/if}}
                        <form action="/account/forgot-password" method="POST">
                            <div class="mb-3">
                                <label for="email" class="form-label">Email Address</label>
                                <input type="email" class="form-control" id="email" name="email" required>
                            </div>
                            <div class="d-grid">
                                <button type="submit" class="btn btn-primary">Send OTP</button>
                            </div>
                        </form>

                    </div>
                </div>
            </div>
        </div>
    </div>{{#section 'js'}}
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    $(document).ready(function() {
        // Handle the OTP request
        $('#btnGetOtp').on('click', async function() {
            const email = $('#txtEmail').val();

            if (email.length === 0) {
                Swal.fire({
                    title: 'Error!',
                    text: 'Please enter your email.',
                    icon: 'error',
                });
                return;
            }

            try {
                const response = await fetch('/account/forgot-password', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ email }),
                });

                const result = await response.json();

                if (response.ok) {
                    Swal.fire({
                        title: 'Success!',
                        text: result.data,
                        icon: 'success',
                    });
                } else {
                    Swal.fire({
                        title: 'Error!',
                        text: result.message || 'Failed to send OTP.',
                        icon: 'error',
                    });
                }
            } catch (err) {
                console.error(err);
                Swal.fire({
                    title: 'Error!',
                    text: 'An error occurred. Please try again.',
                    icon: 'error',
                });
            }
        });

        // Handle form submission for OTP verification
        $('#frmForgotPassword').on('submit', async function(e) {
            e.preventDefault(); // Prevent traditional form submission
            const email = $('#txtEmail').val();
            const otp = $('#txtOtp').val();

            if (!otp) {
                Swal.fire({
                    title: 'Error!',
                    text: 'Please enter the OTP.',
                    icon: 'error',
                });
                return;
            }

            try {
                const response = await fetch('/account/verify-otp', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ email, otp }),
                });

                const result = await response.json();

                if (response.ok) {
                    // Redirect to reset-password page on successful verification
                    window.location.href = '/account/reset-password';
                } else {
                    Swal.fire({
                        title: 'Error!',
                        text: result.message || 'Invalid OTP. Please try again.',
                        icon: 'error',
                    });
                }
            } catch (err) {
                console.error(err);
                Swal.fire({
                    title: 'Error!',
                    text: 'An error occurred while verifying OTP. Please try again.',
                    icon: 'error',
                });
            }
        });
    });
</script>
{{/section}}


<style>
    .change-header {
        background: linear-gradient(to bottom, #f8f9fa 0%, #ffffff 100%);
        padding: 3rem 2rem 2rem;
    }
    .avatar-wrapper {
        position: relative;
        width: 100px;
        margin: 0 auto 1.5rem;
    }

    .avatar-circle {
        width: 100px;
        height: 100px;
        background: linear-gradient(45deg, #4e73df, #224abe);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        border: 4px solid #ffffff;
        box-shadow: 0 5px 15px rgba(78, 115, 223, 0.2);
    }

    .avatar-circle i {
        font-size: 3rem;
        color: white;
    }

    .avatar-badge {
        position: absolute;
        bottom: 0;
        right: 0;
        width: 32px;
        height: 32px;
        background: #ffffff;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
        border: 2px solid #4e73df;
    }

    .avatar-badge i {
        font-size: 0.9rem;
        color: #4e73df;
    }
    .change-title {
        font-size: 1.75rem;
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 0.5rem;
    }
    .change-subtitle {
        color: #6c756c;
        font-size: 1rem;
        margin-bottom: 1.5rem;
    }
    .change-divider {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 15px;
        margin-bottom: 1rem;
    }
    .change-divider .line {
        height: 3px;
        width: 80px;
        background: linear-gradient(to right, transparent, #e9ecef);
    }
    .change-divider .line:last-child {
        background: linear-gradient(to left, transparent, #e9ecef);
    }
    .change-divider i {
        font-size: 1rem;
    }
    .card {
        border-radius: 15px;
        overflow: hidden;
    }
    .form-control {
        border: 2px solid #e9ecef;
        border-radius: 10px;
        padding: 12px 15px;
        transition: all 0.3s ease;
    }
    .form-control:focus {
        border-color: #f8f9fa;
        border-color: #e9ecef;
    }
    .btn {
        border-radius: 10px;
        padding: 12px 20px;
        font-weight: 500;
        transition: all 0.3s ease;
    }
    .btn-primary {
        border: none;
        background: linear-gradient(45deg, #4e73df, #224abe);
    }
    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(78, 115, 223, 0.3);
    }
    .form-label {
        color: #495057;
        font-size: 0.9rem;
        margin-bottom: 0.5rem;
    }

    .card-header {
        padding-top: 2rem;
        padding-bottom: 1rem;
    }

    .bi {
        font-size: 1.1rem;
    }
</style>